- name: Frontend Install Preparation
  hosts: devops_server
  become: yes
  gather_facts: no
  tasks:
    - name: Chargement des variables d'environnment
      include_vars: "../{{ env }}.yml"

    - name: Remove VirtualEnv
      file:
        path: "{{ devops_path }}/venv"
        state: absent

    - name: Install python3-venv
      shell: apt-get -y install python3-venv

    - name: Create VirtualEnv
      shell: python3 -m venv "{{ devops_path }}/venv"

    - name: Install docker module in venv
      shell: "{{ devops_path }}/venv/bin/pip install docker"

    - name: Create deployment directory
      file:
        path: "{{ devops_tools.state_base_dir }}/nginx"
        state: directory

    - name: Create conf directory
      file:
        path: "{{ devops_tools.state_base_dir }}/nginx/data/nginx"
        state: directory

- name: Frontend Configuration
  hosts: devops_server
  become: yes
  gather_facts: no
  tasks:
    - name: Set nginx conf
      template:
        src: templates/data/nginx/apps.conf.j2
        dest: "{{ devops_tools.state_base_dir }}/nginx/data/nginx/apps.conf"

    - name: Copy docker-compose
      template:
        src: templates/docker-compose.yml.j2
        dest: "{{ devops_tools.state_base_dir }}/nginx/docker-compose.yml"

    - name: Copy init letsencrypt
      template:
        src: templates/init-letsencrypt.sh.j2
        dest: "{{ devops_tools.state_base_dir }}/nginx/init-letsencrypt.sh"
        mode: 0755

- name: Frontend Start
  hosts: devops_server
  become: yes
  gather_facts: no
  vars:
    ansible_python_interpreter: "{{ devops_path }}/venv/bin/python"
  tasks:
    - name: Restart frontend
      shell: docker-compose down; docker-compose up -d
      args:
        chdir: "{{ devops_tools.state_base_dir }}/nginx/"

